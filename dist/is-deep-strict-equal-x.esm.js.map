{"version":3,"sources":["../src/is-deep-strict-equal-x.js"],"names":[],"mappings":"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","file":"is-deep-strict-equal-x.esm.js","sourcesContent":["import hasOwnProperty from 'has-own-property-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\nimport objectToString from 'to-string-tag-x';\nimport isDate from 'is-date-object';\nimport isMap from 'is-map-x';\nimport isRegExp from 'is-regexp-x';\nimport isSet from 'is-set-x';\nimport isNumberObject from 'is-number-object';\nimport isStringObject from 'is-string';\nimport isBooleanObject from 'is-boolean-object';\nimport isSymbolObject from 'is-symbol';\nimport isAnyArrayBuffer from 'is-array-buffer-x';\nimport isError from 'is-error-x';\nimport isBoxedPrimitive from 'is-boxed-primitive';\nimport isBigIntObject from 'is-bigint';\nimport whichTypedArray from 'which-typed-array';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport objectIs from 'same-value-x';\nimport objectKeys from 'object-keys-x';\nimport numberIsNaN from 'is-nan-x';\nimport getPrototypeOf from 'get-prototype-of-x';\nimport isArray from 'is-array-x';\nimport getOwnPropertySymbols from 'get-own-property-symbols-x';\nimport getOwnPropertyNames from 'get-own-property-names-x';\nimport arrayFilter from 'array-filter-x';\nimport isIndex from 'is-index-x';\nimport {MapConstructor, SetConstructor} from 'collections-x';\nimport isArrayBufferEqual from 'arraybuffer-equal';\nimport isDataView from 'is-data-view-x';\nimport slice from 'array-slice-x';\n\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void 0;\nconst EMPTY_STRING = '';\nlet $innerDeepEqual;\n\nconst bigInt48 = (function getBigInt48() {\n  if (typeof BigInt === 'function') {\n    try {\n      /* eslint-disable-next-line babel/new-cap,no-undef,compat/compat */\n      return BigInt(48);\n    } catch (ignore) {\n      // empty\n    }\n  }\n\n  return UNDEFINED;\n})();\n\nconst hasBigInt = isBigIntObject(bigInt48);\nconst BigIntValueOf = hasBigInt ? bigInt48.valueOf : UNDEFINED;\nconst BooleanValueOf = true.valueOf;\nconst DateGetTime = new Date().getTime;\nconst NumberValueOf = (0).valueOf;\nconst StringValueOf = EMPTY_STRING.valueOf;\n/* eslint-disable-next-line compat/compat */\nconst SymbolValueOf = hasSymbolSupport ? Symbol(EMPTY_STRING).valueOf : UNDEFINED;\nconst hasArrayBuffer =\n  typeof ArrayBuffer === 'function' &&\n  (function testArrayBuffer() {\n    try {\n      /* eslint-disable-next-line compat/compat */\n      return isAnyArrayBuffer(new ArrayBuffer(4));\n    } catch (ignore) {\n      return false;\n    }\n  })();\n\n/* eslint-disable-next-line compat/compat */\nconst hasIsView = hasArrayBuffer && typeof ArrayBuffer.isView === 'function';\nconst isArrayBufferView = hasIsView\n  ? ArrayBuffer.isView /* eslint-disable-line compat/compat */\n  : function isArrayBufferView(value) {\n      return whichTypedArray(value) !== false || isDataView(value);\n    };\n\nconst isFloat32Array = function isFloat32Array(value) {\n  // noinspection JSIncompatibleTypesComparison\n  return whichTypedArray(value) === 'Float32Array';\n};\n\nconst isFloat64Array = function isFloat64Array(value) {\n  // noinspection JSIncompatibleTypesComparison\n  return whichTypedArray(value) === 'Float64Array';\n};\n\n// const ALL_PROPERTIES = 0;\n// const ONLY_WRITABLE = 1;\nconst ONLY_ENUMERABLE = 2;\n// const ONLY_CONFIGURABLE = 4;\n// const SKIP_STRINGS = 8;\nconst SKIP_SYMBOLS = 16;\n\nconst getOwnNonIndexProperties = function getOwnNonIndexProperties(value, filter) {\n  // noinspection JSBitwiseOperatorUsage\n  const names = filter & ONLY_ENUMERABLE /* eslint-disable-line no-bitwise */ ? objectKeys(value) : getOwnPropertyNames(value);\n  // noinspection JSBitwiseOperatorUsage\n  const symbols = filter & SKIP_SYMBOLS /* eslint-disable-line no-bitwise */ ? [] : getOwnPropertySymbols(value);\n\n  return arrayFilter([...names, ...symbols], (key) => !isIndex(key));\n};\n\nconst kStrict = true;\nconst kLoose = false;\n\nconst kNoIterator = 0;\nconst kIsArray = 1;\nconst kIsSet = 2;\nconst kIsMap = 3;\n\n// Check if they have the same source and flags\nconst areSimilarRegExps = function areSimilarRegExps(a, b) {\n  return a.source === b.source && a.flags === b.flags;\n};\n\nconst areSimilarFloatArrays = function areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (let offset = 0; offset < a.byteLength; offset += 1) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst areSimilarTypedArrays = function areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  /* eslint-disable-next-line compat/compat */\n  return isArrayBufferEqual(a.buffer, new Uint8Array(b.buffer, b.byteOffset, b.byteLength).buffer);\n};\n\nconst areEqualArrayBuffers = function areEqualArrayBuffers(buf1, buf2) {\n  /* eslint-disable-next-line compat/compat */\n  return buf1.byteLength === buf2.byteLength && isArrayBufferEqual(new Uint8Array(buf1).buffer, new Uint8Array(buf2).buffer);\n};\n\nconst setHasEqualElement = function setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  const setIter = set.values();\n  let next = setIter.next();\n  while (!next.done) {\n    const val2 = next.value;\n\n    if ($innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n\n      return true;\n    }\n\n    next = setIter.next();\n  }\n\n  return false;\n};\n\nconst getEnumerables = function getEnumerables(val, keys) {\n  return arrayFilter(keys, (k) => propertyIsEnumerable(val, k));\n};\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\nconst findLooseMatchingPrimitives = function findLooseMatchingPrimitives(prim) {\n  let $prim = prim;\n  switch (typeof $prim) {\n    case 'undefined':\n      return null;\n\n    case 'object': // Only pass in null as object!\n      return UNDEFINED;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      $prim = +$prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n    case 'number':\n      if (numberIsNaN($prim)) {\n        return false;\n      }\n\n      break;\n\n    default:\n  }\n\n  return true;\n};\n\nconst setMightHaveLoosePrim = function setMightHaveLoosePrim() {\n  /* eslint-disable-next-line prefer-rest-params */\n  const [a, b, prim] = slice(arguments);\n  const altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  return b.has(altValue) && !a.has(altValue);\n};\n\nconst mapMightHaveLoosePrim = function mapMightHaveLoosePrim() {\n  /* eslint-disable-next-line prefer-rest-params */\n  const [a, b, prim, item, memo] = slice(arguments);\n  const altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  const curB = b.get(altValue);\n\n  if ((typeof curB === 'undefined' && !b.has(altValue)) || !$innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && $innerDeepEqual(item, curB, false, memo);\n};\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  /** @type {Set} */\n  let set = null;\n  const setIterA = a.values();\n  let nextA = setIterA.next();\n  while (!nextA.done) {\n    const val = nextA.value;\n\n    // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n    if (typeof val === 'object' && val !== null) {\n      if (set === null) {\n        set = new SetConstructor();\n      }\n\n      // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something that's deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) {\n        return false;\n      }\n\n      // Fast path to detect missing string, symbol, undefined and null values.\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new SetConstructor();\n      }\n\n      set.add(val);\n    }\n\n    nextA = setIterA.next();\n  }\n\n  if (set !== null) {\n    const setIterB = b.values();\n    let nextB = setIterB.next();\n    while (!nextB.done) {\n      const val = nextB.value;\n\n      // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n      if (typeof val === 'object' && val !== null) {\n        if (!setHasEqualElement(set, val, strict, memo)) {\n          return false;\n        }\n      } else if (!strict && !a.has(val) && !setHasEqualElement(set, val, strict, memo)) {\n        return false;\n      }\n\n      nextB = setIterB.next();\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nconst mapHasEqualEntry = function mapHasEqualEntry() {\n  /* eslint-disable-next-line prefer-rest-params */\n  const [set, map, key1, item1, strict, memo] = slice(arguments);\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  const setIter = set.values();\n  let next = setIter.next();\n  while (!next.done) {\n    const key2 = next.value;\n\n    if ($innerDeepEqual(key1, key2, strict, memo) && $innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n\n      return true;\n    }\n\n    next = setIter.next();\n  }\n\n  return false;\n};\n\nconst mapEquiv = function mapEquiv() {\n  /* eslint-disable-next-line prefer-rest-params */\n  const [a, b, strict, memo] = slice(arguments);\n  /** @type {Set} */\n  let set = null;\n\n  const setIterA = a.entries();\n  let nextA = setIterA.next();\n  while (!nextA.done) {\n    const [key, item1] = nextA.value;\n\n    if (typeof key === 'object' && key !== null) {\n      if (set === null) {\n        set = new SetConstructor();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      const item2 = b.get(key);\n\n      if ((typeof item2 === 'undefined' && !b.has(key)) || !$innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) {\n          return false;\n        }\n\n        // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) {\n          return false;\n        }\n\n        if (set === null) {\n          set = new SetConstructor();\n        }\n\n        set.add(key);\n      }\n    }\n\n    nextA = setIterA.next();\n  }\n\n  if (set !== null) {\n    const setIterB = b.entries();\n    let nextB = setIterB.next();\n    while (!nextB.done) {\n      const [key, item] = nextB.value;\n\n      if (typeof key === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) {\n          return false;\n        }\n      } else if (\n        !strict &&\n        (!a.has(key) || !$innerDeepEqual(a.get(key), item, false, memo)) &&\n        !mapHasEqualEntry(set, a, key, item, false, memo)\n      ) {\n        return false;\n      }\n\n      nextB = setIterB.next();\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n};\n\nconst isEqualBoxedPrimitive = function isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(NumberValueOf.call(val1), NumberValueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && StringValueOf.call(val1) === StringValueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && BooleanValueOf.call(val1) === BooleanValueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigIntValueOf.call(val1) === BigIntValueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && SymbolValueOf.call(val1) === SymbolValueOf.call(val2);\n};\n\nconst objEquiv = function objEquiv() {\n  /* eslint-disable-next-line prefer-rest-params */\n  const [a, b, strict, keys, memos, iterationType] = slice(arguments);\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  let i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i += 1) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !$innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        const keysA = objectKeys(a);\n        for (; i < keysA.length; i += 1) {\n          const key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !$innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        return keysA.length === objectKeys(b).length;\n      }\n    }\n  }\n\n  // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n  for (i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n\n    if (!$innerDeepEqual(a[key], b[key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst keyCheck = function keyCheck() {\n  /* eslint-disable-next-line prefer-rest-params */\n  const [val1, val2, strict, memos, iterationType, aKeys] = slice(arguments);\n  let $memos = memos;\n  let $aKeys = aKeys;\n\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    $aKeys = objectKeys(val1);\n    const bKeys = objectKeys(val2);\n\n    // The pair must have the same number of owned properties.\n    if ($aKeys.length !== bKeys.length) {\n      return false;\n    }\n  }\n\n  // Cheap key test\n  let i = 0;\n  for (; i < $aKeys.length; i += 1) {\n    if (!hasOwnProperty(val2, $aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    const symbolKeysA = getOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      let count = 0;\n      for (i = 0; i < symbolKeysA.length; i += 1) {\n        const key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          $aKeys.push(key);\n          count += 1;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      const symbolKeysB = getOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      const symbolKeysB = getOwnPropertySymbols(val2);\n\n      if (symbolKeysB.length !== 0 && getEnumerables(val2, symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (\n    $aKeys.length === 0 &&\n    (iterationType === kNoIterator || (iterationType === kIsArray && val1.length === 0) || val1.size === 0)\n  ) {\n    return true;\n  }\n\n  // Use $memos to handle cycles.\n  if (typeof $memos === 'undefined') {\n    $memos = {\n      val1: new MapConstructor(),\n      val2: new MapConstructor(),\n      position: 0,\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    const val2MemoA = $memos.val1.get(val1);\n\n    if (typeof val2MemoA !== 'undefined') {\n      const val2MemoB = $memos.val2.get(val2);\n\n      if (typeof val2MemoB !== 'undefined') {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    $memos.position += 1;\n  }\n\n  $memos.val1.set(val1, $memos.position);\n  $memos.val2.set(val2, $memos.position);\n\n  const areEq = objEquiv(val1, val2, strict, $aKeys, $memos, iterationType);\n\n  $memos.val1.delete(val1);\n  $memos.val2.delete(val2);\n\n  return areEq;\n};\n\n// Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n$innerDeepEqual = function innerDeepEqual() {\n  /* eslint-disable-next-line prefer-rest-params */\n  const [val1, val2, strict, memos] = slice(arguments);\n\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) {\n      return true;\n    }\n\n    return strict ? objectIs(val1, val2) : true;\n  }\n\n  // Check more closely if val1 and val2 are equal.\n  if (strict) {\n    if (typeof val1 !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (typeof val2 !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (getPrototypeOf(val1) !== getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || typeof val1 !== 'object') {\n      if (val2 === null || typeof val2 !== 'object') {\n        // noinspection EqualityComparisonWithCoercionJS\n        return val1 == val2; /* eslint-disable-line eqeqeq */\n      }\n\n      return false;\n    }\n\n    if (val2 === null || typeof val2 !== 'object') {\n      return false;\n    }\n  }\n\n  const val1Tag = objectToString(val1);\n  const val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    /* eslint-disable-next-line no-bitwise */\n    const filter = strict ? ONLY_ENUMERABLE : ONLY_ENUMERABLE | SKIP_SYMBOLS;\n    const keys1 = getOwnNonIndexProperties(val1, filter);\n    const keys2 = getOwnNonIndexProperties(val2, filter);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  }\n\n  if (val1Tag === '[object Object]') {\n    return keyCheck(val1, val2, strict, memos, kNoIterator);\n  }\n\n  if (isDate(val1)) {\n    if (DateGetTime.call(val1) !== DateGetTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isError(val1)) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    }\n\n    // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n    /* eslint-disable-next-line no-bitwise */\n    const filter = strict ? ONLY_ENUMERABLE : ONLY_ENUMERABLE | SKIP_SYMBOLS;\n    const keys1 = getOwnNonIndexProperties(val1, filter);\n    const keys2 = getOwnNonIndexProperties(val2, filter);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, keys1);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n};\n\n// noinspection JSUnusedGlobalSymbols\nexport function isDeepEqual(val1, val2) {\n  return $innerDeepEqual(val1, val2, kLoose);\n}\n\nexport function isDeepStrictEqual(val1, val2) {\n  return $innerDeepEqual(val1, val2, kStrict);\n}\n"]}